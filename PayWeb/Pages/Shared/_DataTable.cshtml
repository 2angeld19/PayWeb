@* PayWeb/Pages/Shared/_DataTable.cshtml *@
@model PayWeb.Models.DataTableViewModel

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <div class="d-flex flex-wrap justify-content-between mb-3">
            <!-- Barra de búsqueda -->
            <div class="d-flex align-items-center mb-2 mb-md-0">
                <label for="searchInput_@Model.TableId" class="me-2">Buscar:</label>
                <input type="text" class="form-control form-control-sm me-2" id="searchInput_@Model.TableId"
                       style="width: 200px;">

                <label for="searchField_@Model.TableId" class="me-2">Buscar en:</label>
                <select class="form-select form-select-sm" id="searchField_@Model.TableId" style="width: auto;">
                    @if (Model.Columns != null)
                    {
                        foreach (var column in Model.Columns)
                        {
                            <option value="@column.Field">@column.Title</option>
                        }
                    }
                </select>
            </div>

            <!-- Selector de orden -->
            <div class="d-flex align-items-center">
                <label for="orderDefault_@Model.TableId" class="me-2">Orden Default:</label>
                <select class="form-select form-select-sm" id="orderDefault_@Model.TableId" style="width: auto;">
                    @if (Model.Columns != null)
                    {
                        foreach (var column in Model.Columns.Where(c => c.Orderable))
                        {
                            <option value="@column.Field">@column.Title</option>
                        }
                    }
                </select>
            </div>
        </div>

        <!-- Tabla de datos -->
        <div class="table-responsive">
            <table id="@Model.TableId" class="table table-striped table-hover border">
                <thead class="table-light">
                    <tr>
                        @if (Model.Columns != null)
                        {
                            foreach (var column in Model.Columns)
                            {
                                <th>@column.Title</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    <!-- Los datos se cargarán dinámicamente con DataTables -->
                </tbody>
            </table>
        </div>

        <!-- Botones de acción -->
        <div class="d-flex justify-content-between mt-3">
            <div class="btn-group">
                <button type="button" class="btn btn-primary btn-sm" id="btnNew_@Model.TableId">
                    <i class="fas fa-plus me-1"></i> Nuevo
                </button>
                <button type="button" class="btn btn-secondary btn-sm" id="btnSave_@Model.TableId">
                    <i class="fas fa-save me-1"></i> Guardar
                </button>
                <button type="button" class="btn btn-outline-secondary btn-sm" id="btnCancel_@Model.TableId">
                    <i class="fas fa-times me-1"></i> Cancelar
                </button>
            </div>

            <button type="button" class="btn btn-outline-secondary btn-sm" id="btnExit_@Model.TableId">
                <i class="fas fa-sign-out-alt me-1"></i> Salir
            </button>
        </div>
    </div>
</div>

@* Script para inicializar DataTables *@
<script>
    $(document).ready(function() {
        // Inicializar la tabla con DataTables
        var table = $('#@Model.TableId').DataTable({
            language: {
                url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
            },
            columns: @Html.Raw(Json.Serialize(Model.Columns ?? new List<PayWeb.Models.DataTableColumn>())),
            data: @Html.Raw(Json.Serialize(Model.Data ?? new List<object>())),
            paging: false,
            searching: false,
            ordering: true,
            info: false,
            dom: 't',
            select: true,
            responsive: true,
            scrollY: '300px',
            scrollCollapse: true,
            // Configuración específica para selección de filas
            rowCallback: function(row, data) {
                $(row).on('click', function() {
                    if (!$(this).hasClass('selected')) {
                        table.$('tr.selected').removeClass('selected');
                        $(this).addClass('selected');

                        // Llamar a la función de selección si está definida
                        if (typeof window.onRowSelected_@(Model.TableId) === 'function') {
                            window.onRowSelected_@(Model.TableId)(data);
                        }
                    }
                });
            }
        });

        // Configurar búsqueda personalizada
        $('#searchInput_@Model.TableId').on('keyup', function() {
            const searchField = $('#searchField_@Model.TableId').val();
            const searchValue = this.value;

            // Buscar en la columna especificada por el nombre del campo
            const columnIndex = table.column(searchField + ':name').index();
            if (columnIndex !== undefined) {
                table.column(columnIndex).search(searchValue).draw();
            } else {
                // Si no se encuentra la columna por nombre, hacer una búsqueda global
                table.search(searchValue).draw();
            }
        });

        // Configurar orden por defecto
        $('#orderDefault_@Model.TableId').on('change', function() {
            const orderColumn = $(this).val();
            // Buscar la columna por el nombre del campo
            const columnIndex = table.column(orderColumn + ':name').index();

            if(columnIndex !== undefined) {
                table.order([columnIndex, 'asc']).draw();
            }
        });

        // Configurar botones
        $('#btnNew_@Model.TableId').on('click', function() {
            if (typeof window.onNewItem_@(Model.TableId) === 'function') {
                window.onNewItem_@(Model.TableId)();
            }
        });

        $('#btnSave_@Model.TableId').on('click', function() {
            if (typeof window.onSaveItem_@(Model.TableId) === 'function') {
                window.onSaveItem_@(Model.TableId)();
            }
        });

        $('#btnCancel_@Model.TableId').on('click', function() {
            if (typeof window.onCancelEdit_@(Model.TableId) === 'function') {
                window.onCancelEdit_@(Model.TableId)();
            }
        });

        $('#btnExit_@Model.TableId').on('click', function() {
            if (typeof window.onExit_@(Model.TableId) === 'function') {
                window.onExit_@(Model.TableId)();
            } else {
                // Comportamiento por defecto, cerrar el modal si está en uno
                const modal = bootstrap.Modal.getInstance(document.getElementById('dynamicModal'));
                if (modal) modal.hide();
            }
        });

        // Guardar la referencia a la tabla para acceso público
        window.dataTable_@(Model.TableId) = table;
    });
</script>